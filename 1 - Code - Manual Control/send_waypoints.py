from pymavlink import mavutil

def get_distance_global(current_lat, current_lon, target_lat, target_lon):
    #return the distance between current position and target position in centimeters
    #does not account for the curvature of the earth

    delta_lat = target_lat - current_lat
    delta_lon = target_lon - current_lon

    if delta_lat <= 1 or delta_lon <= 1:
        return 0

    distance  = math.sqrt(delta_lat ** 2 + delta_lon ** 2) #formula for euclidean distance between 2 points
    return distance #mavlink GPS coords are represented in units of 10,000,000, so this line converts degrees to cm. 

def get_distance_local(curr_x, curr_y, curr_z, x, y, z):
    return math.sqrt((curr_x - x)**2 + (curr_y - y)**2 + (curr_z - z)**2)



#send local frame coordinates and have copter fly over that spot.
def send_waypoint_local(connection, x, y, alt):
    connection.mav.send(mavutil.mavlink.MAVLink_set_position_target_local_ned_message
                    (10, connection.target_system, connection.target_component, mavutil.mavlink.MAV_FRAME_LOCAL_NED, 
                     int(0b010111111000), x, y, alt,
                      0, 0, 0, 0, 0, 0, 0, 0))

    while 1:
        msg = connection.recv_match(type = 'LOCAL_POSITION_NED', blocking = True)
        
        current_x = msg.x
        current_y = msg.y
        current_z = msg.z

        print("current x: %d" % current_x)

        distance = get_distance_local(current_x, current_y, current_z, x, y, alt)

        print("distance to target: %d" % distance)

        if(distance <= 3): #break when we are within 50 cm of target
            print("target waypoint reached")
            break


#send global gps coordinates and altitude, and have copter fly over that spot. 
def send_waypoint_global(connection, lat, lon, alt):
    connection.mav.send(mavutil.mavlink.MAVLink_set_position_target_global_int_message
                    (10, connection.target_system, connection.target_component, mavutil.mavlink.MAV_FRAME_GLOBAL_RELATIVE_ALT, 
                     int(0b110111111000), int(lat), int(lon), alt, 0, 0, 0, 0, 0, 0, 0, 0))
    #loop until we reach target waypoint
    while 1:
        msg = connection.recv_match(type = 'GLOBAL_POSITION_INT', blocking = True)

        current_lat = msg.lat 
        current_lon = msg.lon

        distance = get_distance_global(current_lat, current_lon, lat, lon)

        print("distance to target: %d" % distance)

        if(distance <= 50): #break when we are within 50 cm of target
            print("target waypoint reached")
            break


#parse through the array of coordinates generated by the MVC and fly to each point
def process_planArr(connection, planArr, alt):
    print("sending takeoff command")
    takeoff(connection, alt)
    for lat, lon in planArr:
        if (lat):
            print("Going to lat: %s lon: %s" % (lat, lon))
            send_waypoint_local(connection, float(lat) , float(lon) , alt)
    land(connection)